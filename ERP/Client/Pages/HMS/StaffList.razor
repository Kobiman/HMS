@page "/staff"
@layout HRLayout
<RadzenFieldset>
    <HeaderTemplate>
        <span>
            <b style="font-size:25px">Staff</b>
        </span>
    </HeaderTemplate>
    <ChildContent>
        <div class="row form-group">
            <RadzenButton ButtonStyle="ButtonStyle.Light" Click=@(args => navigation.NavigateTo("/staff/new"))>New</RadzenButton>
        </div>
        <div class="row">
            <RadzenDataGrid Data="@staffs" Count="@count" LoadData="@LoadData" TItem="Staff" AllowVirtualization="true" Style="height:400px"
                            AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                            AllowSorting="true">
                <Columns>
                    <RadzenDataGridColumn TItem="Staff" Property="Surname" Title="Surname" />
                    <RadzenDataGridColumn TItem="Staff" Property="Othernames" Title="Othernames" />
                    <RadzenDataGridColumn TItem="Staff" Property="DateofBirth" Title="Date Of Birth" />
                    <RadzenDataGridColumn TItem="Staff" Property="Email" Title="Email" />
                    <RadzenDataGridColumn TItem="Staff" Property="Phone" Title="Phone" />
                    <RadzenDataGridColumn TItem="Staff" Property="StaffId" Title="" Width="5">
                        <Template Context="data">
                            <RadzenButton ButtonStyle="ButtonStyle.Light" Click=@(args => navigation.NavigateTo($"/staff/new/{data.StaffId}"))>Edit</RadzenButton>
                        </Template>
                    </RadzenDataGridColumn>
                </Columns>
            </RadzenDataGrid>
        </div>
    </ChildContent>
</RadzenFieldset>

@code {

    int count;
    IEnumerable<Staff> staffs;

    async Task LoadData(LoadDataArgs args)
    {
        var result = await Http.GetFromJsonAsync<Result<Staff[]>>($"{Constants.HMSUrl}/api/Staff/GetStaffs");
        staffs = result.Value;

      count = staffs.Count();
    }
}
